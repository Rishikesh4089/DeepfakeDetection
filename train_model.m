load('models/augmentedImds.mat');  % Ensure the preprocessed dataset is saved in 'augmentedImds.mat'
net = resnet50;
lgraph = layerGraph(net);
lgraph = removeLayers(lgraph, {'fc1000', 'fc1000_softmax', 'ClassificationLayer_fc1000'});
numClasses = 2;
newLayers = [
    fullyConnectedLayer(numClasses, 'Name', 'fc', 'WeightLearnRateFactor', 10, 'BiasLearnRateFactor', 10)
    softmaxLayer('Name', 'softmax')
    classificationLayer('Name', 'classification')];
lgraph = addLayers(lgraph, newLayers);
lgraph = connectLayers(lgraph, 'avg_pool', 'fc');  % Connect the new fully connected layer to 'avg_pool'
options = trainingOptions('adam', ... 
    'MiniBatchSize', 16, ...          
    'MaxEpochs', 5, ...               
    'InitialLearnRate', 1e-4, ...    
    'Shuffle', 'every-epoch', ...
    'Verbose', false, ...
    'Plots', 'training-progress', ...
    'ExecutionEnvironment', 'auto');   % Use GPU if available, or CPU otherwise
trainedNet = trainNetwork(augmentedImds, lgraph, options);
save('models/deepfake_detection_model.mat', 'trainedNet');
disp('Model training complete, and the model has been saved.');
